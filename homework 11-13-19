Lab: Defining and Calling a Function
Define a function named getOrderTotal(...), which takes two arguments and returns the sum as well as the original operands.
Call the function and output the result

<?php
function getOrderTotal(int $operand1,int $operand2) {

  $sum = $operand1 + $operand2;
  
  return array($sum,$operand1,$operand2);
}

$returnarray = getOrderTotal(1,3);
foreach ($returnarray as $value) {
  echo $value;
  echo PHP_EOL;
}


Lab: Recursive Function Exercise
The Fibonacci sequence is a series of numbers in which each number is the sum of the previous two numbers, starting with 0.
0, 1, 1, 2, 3, 5, 8, 13, 21, 34 
Write a function that returns the nth number in a Fibbonacci sequence.
<?php
function fib(int $lastseqno,int $nextseqno) {
	
    echo $lastseqno;
    echo PHP_EOL;

    $savedlastseqno = $lastseqno;
    $lastseqno = $nextseqno;  
    $nextseqno += $savedlastseqno;

    if ($nextseqno < 100) {
        fib($lastseqno,$nextseqno);  
    }
    else {
      return;
    }
}


$fibno = fib(0,1);


Lab: Two Functions
Build two functions, one to get an array element of configuration, and one that takes an array and builds an HTML select/option list.
getConfig('some config'), returns an array of allowed statuses
htmlSelectHtml($config), returns a string contains an HTML <select> element with the status options. 

Config file (config.php)
<?php
return [
// The status options
    'status_codes' => [
        'default' => 'open',
        'cancelled',
        'held',
        'invoiced',
        'complete'
    ]
];

Functions to get config
<?php

function getConfig($configFile, $config_key) {
    $config = include __DIR__ . '/config/' . $configFile;
    return $config[$config_key];
}

function htmlSelectHtml( $config ) {
    $html = '<select>';
      foreach ($config as $value) {
        $html .=  '<option value="'.$value.'">'.$value.'</option>';
      }
    $html .= '</select>';
    return $html;
}

$selected = getConfig('config.php','status_codes');
$htmlout = htmlSelectHtml($selected);

echo $htmlout;
